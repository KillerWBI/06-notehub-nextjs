// app/notes/[id]/page.tsx
import { getSingleNote } from "@/lib/api";
import {
  HydrationBoundary,
  QueryClient,
  dehydrate,
} from "@tanstack/react-query";
import type { Metadata } from "next";
import NoteDetailsClient from "./NoteDetails.client";

type Props = {
   params: { id: string };
};

export async function generateMetadata({params}: Props): Promise<Metadata> {
  const  note  = await getSingleNote(params.id);
  return {
      title: `${note.title} | NoteHub`,
  description: `${note.content.slice(0, 10)} | NoteHub`,
  openGraph : {
    title: 'Filter:${slug} | NoteHub',
    description: 'Generated by create note',
    url: 'https://ac.goit.global/fullstack/react/notehub-og-meta.jpg',
    images: [
      {
        url: 'https://ac.goit.global/fullstack/react/notehub-og-meta.jpg',
        width: 1200,
        height: 630,
        alt: 'NoteHub',
      },
    ],
  },
  }
}

const NoteDetails = async ({ params }: Props) => {
    const { id } = params;
  const queryClient = new QueryClient();

  await queryClient.prefetchQuery({
    queryKey: ["note", id],
    queryFn: () => getSingleNote(id),
  });

  return (
    <HydrationBoundary state={dehydrate(queryClient)}>
      <NoteDetailsClient />
    </HydrationBoundary>
  );
};

export default NoteDetails;
